@*@model IEnumerable<ZQY.Models.Every>*@
@model ZQY.ViewModels.EveryIndexViewModel
@using PagedList.Mvc
@{
    //ViewBag.Title = "Index";
    ViewBag.Title = "Every";
    
}
<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/total.css">
    <style>
        .styled-table {
            font-family: 'Bradley Hand ITC',方正舒体;
            font-weight: bold;
            /* Add any additional styling for your table here */
        }
    </style>
</head>


<body style="background-color:antiquewhite">

    <!-- music -->
    <audio id="myAudio" autoplay loop>
        <source src="~/Content/images/music/ciwo.mp3" type="audio/mpeg" />
        Your browser does not support the audio element.
    </audio>

    <script>
        var audio = document.getElementById("myAudio");

        document.addEventListener("click", function () {
            if (audio.paused) {
                audio.play();
            }
        });
    </script>

    <style>
        /* 隐藏默认音频控制条 */
        #myAudio {
            display: none;
        }
    </style>


    <br />
    @using (Html.BeginForm("Index", "Everies", FormMethod.Get, new { @class = "navbar-form" }))
    {
        <div class="input-group" style="font-family: 'Bradley Hand ITC', cursive;">
            @Html.TextBox("Search", null, new
            {
                @class = "form-control",
                @placeholder = "Search Plot",
                style = "background-color:lightyellow; color:red;"
            })
            <button type="submit" style="font-family: 'Bradley Hand ITC', cursive;">Search</button>
        </div>
    }

    <br />
    <br />
    <br />
    <br />
    <p>
       


        <style>
            body {
                font-family: 'Bradley Hand ITC', cursive;
            }
        </style>

    <p>
        @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found")
        @Model.Everies.TotalItemCount Episoes
    </p>

    <p>
        @Html.ActionLink("Create New", "Create")
        @using (Html.BeginForm("Index", "Everies", FormMethod.Get))
        {
            <label>Filter by season:</label>
            @*@Html.DropDownList("Season", "All")*@
            @Html.DropDownListFor(vm => vm.Season, Model.SeaFilterItems, "All");

            <label>Sort By:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")

            <input type="Submit" value="Filter" />
            @*<input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />*@
            <input type="hidden" name="Search" id="Search" value="@Model.Search" />
        }
    </p>

    <table class="styled-table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Season)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Everies.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Everies.First().Length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Everies.First().Description)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model.Everies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Season.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
    <div>
        Page @(Model.Everies.PageCount < Model.Everies.PageNumber ? 0 :
Model.Everies.PageNumber) of @Model.Everies.PageCount
@Html.PagedListPager(Model.Everies, page => Url.Action("Index", new
{
category = @Model.Season,
    Search = @Model.Search,
    sortBy = @Model.SortBy,
page
}))
</div>
</body>